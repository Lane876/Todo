{"version":3,"sources":["Components/Jumbotron.js","Components/NewToDo.js","Components/Todo.js","Components/ToDoList.js","App.js","index.js"],"names":["Jumbotron","className","NewToDo","state","msg","done","setNewMsg","e","setState","target","value","addTodo","props","addintotodos","type","placeholder","onChange","this","onClick","Component","Todo","todo","index","markToDo","deleteTodo","ToDoList","allToDos","map","key","id","App","Math","floor","random","localStorage","data","JSON","stringify","copyTodos","splice","parse","ReactDOM","render","document","querySelector"],"mappings":"yNAYeA,EATG,WACd,OACI,yBAAKC,UAAU,yBACX,+CCqCGC,E,2MArCXC,MAAQ,CACJC,IAAK,GACLC,MAAM,G,EAIVC,UAAY,SAACC,GACT,EAAKC,SAAS,CACVJ,IAAKG,EAAEE,OAAOC,S,EAItBC,QAAU,WACN,EAAKC,MAAMC,aAAa,EAAKV,OAC7B,EAAKK,SAAS,CACVJ,IAAK,M,wEAKT,OACI,yBAAKH,UAAU,aACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eACX,2BAAOa,KAAK,OAAOb,UAAU,eAAec,YAAY,mBAAmBC,SAAUC,KAAKX,UAAWI,MAAOO,KAAKd,MAAMC,MACvH,yBAAKH,UAAU,sBACX,4BAAQA,UAAU,kBAAkBiB,QAASD,KAAKN,SAAlD,gB,GA5BVQ,aCqBPC,EAvBF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACnC,OACI,yBAAKvB,UAAU,SACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,eACX,qCAAWqB,EAAQ,IAEvB,yBAAKrB,UAAU,aACX,wBAAIA,UAAWoB,EAAKhB,KAAO,WAAa,cAAegB,EAAKjB,MAEhE,yBAAKH,UAAU,eACX,4BAAQA,UAAU,4BAA4BiB,QAAS,WACnDM,EAAWF,KADf,UAGA,4BAAQrB,UAAU,8BAA8BiB,QAAS,WACrDK,EAASD,KADb,oBCGLG,EAhBE,SAAC,GAAoC,IAAlCJ,EAAiC,EAAjCA,KAAME,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC1BE,EAAWL,EAAKM,KAAI,SAACN,EAAMC,GAC7B,OACI,kBAAC,EAAD,CAAMD,KAAMA,EAAMO,IAAKP,EAAKQ,GAAIP,MAAOA,EAAOC,SAAUA,EAAUC,WAAYA,OAItF,OACI,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACVyB,KC8CFI,G,iNAnDX3B,MAAQ,CACJkB,KAAM,I,EAeVR,aAAe,SAACQ,GACZA,EAAKQ,GAAKE,KAAKC,MAAM,GAAAD,KAAKE,SAAwB,IAClDC,aAAaC,KAAOC,KAAKC,UAAL,sBAAmB,EAAKlC,MAAMkB,MAA9B,CAAoCA,KACxD,EAAKb,SAAS,CAAEa,KAAK,GAAD,mBAAM,EAAKlB,MAAMkB,MAAjB,CAAuBA,O,EAI/CE,SAAW,SAACD,GACR,IAAMgB,EAAS,YAAO,EAAKnC,MAAMkB,MACjCiB,EAAUhB,GAAOjB,MAAQiC,EAAUhB,GAAOjB,KAC1C6B,aAAaC,KAAOC,KAAKC,UAAUC,GACnC,EAAK9B,SAAS,CAAEa,KAAMiB,K,EAG1Bd,WAAa,SAACF,GACV,IAAMgB,EAAS,YAAO,EAAKnC,MAAMkB,MACjCiB,EAAUC,OAAOjB,EAAO,GACxBY,aAAaC,KAAOC,KAAKC,UAAUC,GACnC,EAAK9B,SAAS,CACVa,KAAMiB,K,mFA9BV,IAAIH,EAAO,GACPD,aAAaC,OACbA,EAAOC,KAAKI,MAAMN,aAAaC,OAEnClB,KAAKT,SAAS,CACVa,KAAMc,M,+BA+BV,OACI,yBAAKlC,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASY,aAAcI,KAAKJ,eAC5B,kBAAC,EAAD,CAAUQ,KAAMJ,KAAKd,MAAMkB,KAAME,SAAUN,KAAKM,SAAUC,WAAYP,KAAKO,kB,GA9CzEL,cCHlBsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,U","file":"static/js/main.07b30962.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Jumbotron = () => {\r\n    return (\r\n        <div className=\"jumbotron text-center\">\r\n            <h3>Things To Do!</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Jumbotron\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\n\r\n\r\nclass NewToDo extends Component {\r\n    state = {\r\n        msg: \"\",\r\n        done: false\r\n    }\r\n\r\n\r\n    setNewMsg = (e) => {\r\n        this.setState({\r\n            msg: e.target.value\r\n        })\r\n    }\r\n\r\n    addTodo = () => {\r\n        this.props.addintotodos(this.state)\r\n        this.setState({\r\n            msg: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conatiner\">\r\n                <div className=\"row m-5\">\r\n                    <div className=\"col-4 offset-4\">\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Add Thing To Do!\" onChange={this.setNewMsg} value={this.state.msg} />\r\n                            <div className=\"input-group-appned\">\r\n                                <button className=\"btn btn-primary\" onClick={this.addTodo}>Add</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewToDo","import React from 'react'\r\n\r\n\r\nconst Todo = ({ todo, index, markToDo, deleteTodo }) => {\r\n    return (\r\n        <div className=\"col-4\">\r\n            <div className=\"card text-center\">\r\n                <div className=\"card-header\">\r\n                    <h4>Todo: {index + 1}</h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h3 className={todo.done ? 'complete' : 'incomplete'}>{todo.msg}</h3>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <button className=\"btn btn-danger float-left\" onClick={() => {\r\n                        deleteTodo(index)\r\n                    }}>Delete</button>\r\n                    <button className=\"btn btn-warning float-right\" onClick={() => {\r\n                        markToDo(index)\r\n                    }} >Mark as Done</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\n\r\nconst ToDoList = ({ todo, markToDo, deleteTodo }) => {\r\n    const allToDos = todo.map((todo, index) => {\r\n        return (\r\n            <Todo todo={todo} key={todo.id} index={index} markToDo={markToDo} deleteTodo={deleteTodo} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {allToDos}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList","import React, { Component } from 'react';\r\nimport Jumbotron from './Components/Jumbotron'\r\nimport NewToDo from './Components/NewToDo'\r\nimport ToDoList from './Components/ToDoList'\r\nimport './App.css'\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        todo: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = []\r\n        if (localStorage.data) {\r\n            data = JSON.parse(localStorage.data)\r\n        }\r\n        this.setState({\r\n            todo: data\r\n        })\r\n    }\r\n\r\n\r\n\r\n    addintotodos = (todo) => {\r\n        todo.id = Math.floor(Math.random() * (100 - 10) - 10)\r\n        localStorage.data = JSON.stringify([...this.state.todo, todo])\r\n        this.setState({ todo: [...this.state.todo, todo] })\r\n    }\r\n\r\n\r\n    markToDo = (index) => {\r\n        const copyTodos = [...this.state.todo]\r\n        copyTodos[index].done = !copyTodos[index].done\r\n        localStorage.data = JSON.stringify(copyTodos)\r\n        this.setState({ todo: copyTodos })\r\n    }\r\n\r\n    deleteTodo = (index) => {\r\n        const copyTodos = [...this.state.todo]\r\n        copyTodos.splice(index, 1)\r\n        localStorage.data = JSON.stringify(copyTodos)\r\n        this.setState({\r\n            todo: copyTodos\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrap\">\r\n                <Jumbotron />\r\n                <NewToDo addintotodos={this.addintotodos} />\r\n                <ToDoList todo={this.state.todo} markToDo={this.markToDo} deleteTodo={this.deleteTodo} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#app\"))\r\n\r\n"],"sourceRoot":""}